global_costmap:
    footprint: [[-0.305, -0.18], [-0.305, 0.18], [0.305, 0.18], [0.305, -0.18]]   #机器人形状  左上角开始 顺时针方向 原始值：[[-0.305, -0.18], [-0.305, 0.18], [0.305, 0.18], [0.305, -0.18]] 实测值（0.56 0.34 0.23 0.13）：[[-0.28, -0.17], [-0.28, 0.17], [0.28, 0.17], [0.28, -0.17]] 
    footprint_padding: 0.01
    transform_tolerance: 0.5 #坐标系间的转换可以忍受的最大延时;
    update_frequency: 10.0
    publish_frequency: 10.0

    global_frame: /map
    robot_base_frame: /base_footprint
    resolution: 0.10

    rolling_window: true
    width: 100.0 #default:10
    height: 40.0 #default:10
    track_unknown_space: true #假如该参数设置为false的话，就意味着地图上的未知区域也会被认为是可以自由移动的区域，
                               #这样在进行全局路径规划时，可以把一些未探索的未知区域也来参与到路径规划。
                               
    #在global_costmap中使用下面三个插件来融合三个不同图层，分别是static_layer、obstacle_layer和inflation_layer，合成一个master_layer来进行全局路径规划。                           
    plugins: 
        - {name: static,    type: "costmap_2d::StaticLayer"}            
        - {name: sensor,    type: "costmap_2d::ObstacleLayer"}
        - {name: inflation, type: "costmap_2d::InflationLayer"}

    static:        
        map_topic: /map 
        subscribe_to_updates: true

    sensor:
        observation_sources: laser_scan_sensor
        laser_scan_sensor: {sensor_frame: laser, data_type: LaserScan, topic: scan, marking: true, clearing: true}

    #膨胀层 
    inflation:
        inflation_radius: 1.5 #default:0.1  #膨胀半径  The radius in meters to which the map inflates obstacle cost values.
        cost_scaling_factor: 8 #default:8.0 #这个值越大 表示膨胀层的值下降得越快 A scaling factor to apply to cost values during inflation. The cost function is computed as follows for all cells in the costmap further than the inscribed radius distance and closer than the inflation radius distance away from an actual obstacle: 
        # exp(-1.0 * cost_scaling_factor * (distance_from_obstacle - inscribed_radius)) * (costmap_2d::INSCRIBED_INFLATED_OBSTACLE - 1)
        # where costmap_2d::INSCRIBED_INFLATED_OBSTACLE is currently 254. NOTE: since the cost_scaling_factor is multiplied by a negative in the formula, increasing the factor will decrease the resulting cost values.

