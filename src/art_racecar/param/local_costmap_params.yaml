local_costmap:
    footprint: [[-0.305, -0.18], [-0.305, 0.18], [0.305, 0.18], [0.305, -0.18]]
    footprint_padding: 0.01
    transform_tolerance: 0.5 #？？？
    update_frequency: 10.0 #局部代价地图的更新频率
    publish_frequency: 10.0 #局部代价地图的发布频率  发布和更新有何区别？？？

    global_frame: /odom  #在局部代价地图中的全局坐标系
    robot_base_frame: /base_footprint
    resolution: 0.10 #地图的分辨率 
    static_map: true #有何作用？？

    rolling_window: true #旋转窗口
    width: 10 #default:10
    height: 10 #default:10
    resolution: 0.05

    inflateon_radius: 0.4 #膨胀半径 什么的膨胀半径？？与下方的膨胀半径有何区别？
    track_unknown_space: false #假如该参数设置为false的话，就意味着地图上的未知区域也会被认为是可以自由移动的区域，
                               #这样在进行全局路径规划时，可以把一些未探索的未知区域也来参与到路径规划。

    plugins:            
        - {name: sensor,    type: "costmap_2d::ObstacleLayer"}
        - {name: inflation, type: "costmap_2d::InflationLayer"}

    sensor:
        observation_sources: laser_scan_sensor
        laser_scan_sensor: {sensor_frame: laser, data_type: LaserScan, topic: scan, marking: true, clearing: true}

    #膨胀层 
    inflation:
        inflation_radius: 0.1 #default:0.1  #膨胀半径  The radius in meters to which the map inflates obstacle cost values.
        cost_scaling_factor: 8 #default:8.0 #这个值越大 表示膨胀层的值下降得越快 A scaling factor to apply to cost values during inflation. The cost function is computed as follows for all cells in the costmap further than the inscribed radius distance and closer than the inflation radius distance away from an actual obstacle: 
        # exp(-1.0 * cost_scaling_factor * (distance_from_obstacle - inscribed_radius)) * (costmap_2d::INSCRIBED_INFLATED_OBSTACLE - 1)
        # where costmap_2d::INSCRIBED_INFLATED_OBSTACLE is currently 254. NOTE: since the cost_scaling_factor is multiplied by a negative in the formula, increasing the factor will decrease the resulting cost values.
